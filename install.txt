[JRCLUST installation guide]

Written by J. James Jun, Apr 5, 2017
    Vidrio Technologies, LLC
    HHMI - Janelia Research Campus

[Requirements]
1. Matlab (R2014b or newer) and toolboxes: Parallel computing, Signal processing, Statistics and Machine Learning, Image processing toolbox.
2. RAM size should be greater than 1/4 or the recording file size.
3. NVidia GPU cards (Compute version 3.5 or higher, which includes Kepler, Maxwell, Pascal-based GPUs).
  Note that Pascal-based GPU is only supported by CUDA 8.0 or higher, which requires Matlab 2017a or higher.
4. NVIDIA CUDA toolkit (Install a correct version supported by your Matlab version)
  R2017a: CUDA 8.0, R2016b: CUDA 7.5, R2016a: CUDA 7.5, R2015b: CUDA 7.0, R2015a: CUDA 6.5, R2014b: CUDA 6.0
5. Latest NVidia GPU driver
  http://www.nvidia.com/Download/index.aspx\
5. Microsoft Microsoft Visual Studio 2013 Express (download from the link below)
  https://www.dropbox.com/s/jrpmto1mwdp4uga/en_visual_studio_express_2013_for_windows_desktop_with_update_5_x86_web_installer_6815514.exe?dl=1

[Installing prerequisites]
1. Install Microsoft Visual Studio 2012 (Express edition, free) or 2013 (Community edition, free)
  https://www.visualstudio.com/en-us/news/releasenotes/vs2013-community-vs
2. Set the system path to the Microsoft Visual C compiler (cl.exe) by editing "PATH" variable in "Environment Variables" in Windows.
  for Visual studio 2012, "cl.exe" path is "C:\Program Files (x86)\Microsoft Visual Studio 11.0\VC\bin\amd64"
  Visual studio 2013 is recommend for matlab version R2016a or newer.
  Visual studio 2012 is recommend for matlab version R2015b or older.
3. Install a correct version of NVIDIA CUDA toolkit that is supported by Matlab.
  To check the CUDA version supprted by Matlab, run "gpuDevice" in Matlab and check "ToolkitVersion".
  R2017a: CUDA 8.0, R2016b: CUDA 7.5, R2016a: CUDA 7.5, R2015b: CUDA 7.0, R2015a: CUDA 6.5, R2014b: CUDA 6.0
  The below is the known relationship between Matlab and CUDA versions (links provided below)
  CUDA 8.0 (current) link: https://developer.nvidia.com/cuda-downloads
  CUDA 7.5 link: https://developer.nvidia.com/cuda-75-downloads-archive
  CUDA 7.0 link: https://developer.nvidia.com/cuda-toolkit-70
  CUDA 6.5 link: https://developer.nvidia.com/cuda-toolkit-65
  CUDA 6.0 link: https://developer.nvidia.com/cuda-toolkit-60
4. Add NVidia C-compiler (nvcc.exe) to the system path.
  For CUDA 8.0, the path is "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\bin"
  For CUDA 7.5, the path is "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\bin"
  For CUDA 7.0, the path is "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.0\bin"
  For CUDA 6.5, the path is "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v6.5\bin"
5. Run Nsight Monitor > Nsight Monitor options (bottom right) > set "WDDM TDR enabled" to false.

[Installation from Dropbox, for Janelia researchers and collaborators only]
1. Copy jrclust folder in the Dropbox folder (e.g. "C:\Dropbox\jrclust") to another location (e.g. "C:\jrclust_user").
2. Start Matlab and "cd" to the copied location (e.g. "C:\jrclust_user").
3. Run "jrc install".
4. Edit "path_dropbox" in "user.cfg" and specify the path to the dropbox folder containing JRCLUST (e.g. "C:\Dropbox\jrclust").
  You can update JRCLUST by running "jrc update".

[Installation from the zip file]
1. Download jrc3.zip from www.jrclust.org and unzip (or the latest jrc version).
2. Start Matlab and "cd" to the unzipped location(e.g. "C:\jrc3\").
3. Run "jrc install".
4. To update, you need to download jrc3.zip from www.jrclust.org (or the latest version).

[Test using the included sample data]
1. Download sample data by running
  >jrc download sample
2. Create a new parameter file
  >jrc makeprm sample.bin sample.prb
  This creates "sample_sample.prm" file.
3. Display the raw traces
  >jrc traces sample_sample.prm
  or you can also run
  >jrc traces
  You can omit sample_sample.prm since JRCLUST remembers the current parameter file.
  Run "jrc clear" to clear the JRCLUST memory.
4. Run spike sorting
  >jrc spikesort
5. Manual verification/sorting
  >jrc manual
6. You can clear the memory and delete all output files for a given parameter file by running
  >jrc clear sample_sample.prm
7. To test the full suite, run
  >jrc unit-test
